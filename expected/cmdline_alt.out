\set VERBOSITY terse
-- predictability
SET synchronous_commit = on;
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'wal2json');
 ?column? 
----------
 init
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'nosuchopt', '42');
ERROR:  option "nosuchopt" = "42" is unknown
-- don't include not-null constraint by default
DROP TABLE IF EXISTS table_optional;
NOTICE:  table "table_optional" does not exist, skipping
CREATE TABLE table_optional (
a smallserial,
b integer,
c boolean not null,
PRIMARY KEY(a)
);
INSERT INTO table_optional (b, c) VALUES(NULL, TRUE);
UPDATE table_optional SET b = 123 WHERE a = 1;
DELETE FROM table_optional WHERE a = 1;
DROP TABLE table_optional;
SELECT data::jsonb - 'xid' FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'include-not-null', '1', 'msg-per-record', '1');
                                                                                                                                                 ?column?                                                                                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"kind": "begin", "split": true}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "table_optional", "schema": "public", "columnnames": ["a", "b", "c"], "columntypes": ["smallint", "integer", "boolean"], "columnvalues": [1, null, true], "columnoptionals": [false, true, false]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "update", "table": "table_optional", "schema": "public", "oldkeys": {"keynames": ["a"], "keytypes": ["smallint"], "keyvalues": [1]}, "columnnames": ["a", "b", "c"], "columntypes": ["smallint", "integer", "boolean"], "columnvalues": [1, 123, true], "columnoptionals": [false, true, false]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "delete", "table": "table_optional", "schema": "public", "oldkeys": {"keynames": ["a"], "keytypes": ["smallint"], "keyvalues": [1]}}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "commit"}
(13 rows)

-- By default don't write in chunks
DROP TABLE IF EXISTS x;
NOTICE:  table "x" does not exist, skipping
CREATE TABLE x ();
DROP TABLE x;
SELECT data::jsonb - 'xid' FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'msg-per-record', '1');
             ?column?             
----------------------------------
 {"kind": "begin", "split": true}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "commit"}
(4 rows)

SELECT data::jsonb - 'xid' FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'msg-per-record', '1');
             ?column?             
----------------------------------
 {"kind": "begin", "split": true}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "commit"}
(4 rows)

DROP TABLE IF EXISTS gimmexid;
NOTICE:  table "gimmexid" does not exist, skipping
CREATE TABLE gimmexid (id integer PRIMARY KEY);
INSERT INTO gimmexid values (1);
DROP TABLE gimmexid;
SELECT max(((data::json) -> 'xid')::text::int) < txid_current() FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'msg-per-record', '1');
 ?column? 
----------
 t
(1 row)

SELECT max(((data::json) -> 'xid')::text::int) + 10 > txid_current() FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'msg-per-record', '1');
 ?column? 
----------
 t
(1 row)

SELECT 'stop' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 stop
(1 row)

