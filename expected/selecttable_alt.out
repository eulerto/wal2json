\set VERBOSITY terse
-- predictability
SET synchronous_commit = on;
DROP TABLE IF EXISTS select_table_1;
DROP TABLE IF EXISTS select_table_2;
DROP TABLE IF EXISTS select_table_3;
DROP SCHEMA IF EXISTS select_schema_1 CASCADE;
NOTICE:  drop cascades to 2 other objects
DROP SCHEMA IF EXISTS select_schema_2 CASCADE;
NOTICE:  drop cascades to 3 other objects
CREATE SCHEMA select_schema_1;
CREATE SCHEMA select_schema_2;
CREATE TABLE select_table_1 (a integer, b text, primary key(a));
CREATE TABLE select_schema_1.select_table_1 (a integer, b text, primary key(a));
CREATE TABLE select_schema_1.select_table_2 (a integer, b text, primary key(a));
CREATE TABLE select_schema_2.select_table_1 (a integer, b text, primary key(a));
CREATE TABLE select_schema_2.select_table_2 (a integer, b text, primary key(a));
CREATE TABLE select_schema_2.select_table_3 (a integer, b text, primary key(a));
CREATE TABLE select_table_2 (a integer, b text, primary key(a));
CREATE TABLE select_table_3 (a integer, b text, primary key(a));
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'wal2json');
 ?column? 
----------
 init
(1 row)

INSERT INTO select_table_1 (a, b) VALUES(1, 'public.select_table_1');
INSERT INTO select_schema_1.select_table_1 (a, b) VALUES(1, 'select_schema_1.select_table_1');
INSERT INTO select_schema_1.select_table_2 (a, b) VALUES(1, 'select_schema_1.select_table_2');
INSERT INTO select_schema_2.select_table_1 (a, b) VALUES(1, 'select_schema_2.select_table_1');
INSERT INTO select_schema_2.select_table_2 (a, b) VALUES(1, 'select_schema_2.select_table_2');
INSERT INTO select_schema_2.select_table_3 (a, b) VALUES(1, 'select_schema_2.select_table_3');
INSERT INTO select_table_2 (a, b) VALUES(1, 'public.select_table_2');
INSERT INTO select_table_3 (a, b) VALUES(1, 'public.select_table_3');
SELECT data::jsonb - 'xid' FROM pg_logical_slot_peek_changes('regression_slot', NULL, NULL, 'pretty-print', '1', 'msg-per-record', '1', 'add-tables', '   foo.bar,*.select_table_1  ,select_schema_2.* , public.select_table_3  ');
                                                                                             ?column?                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "select_table_1", "schema": "public", "columnnames": ["a", "b"], "columntypes": ["integer", "text"], "columnvalues": [1, "public.select_table_1"]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "select_table_1", "schema": "select_schema_1", "columnnames": ["a", "b"], "columntypes": ["integer", "text"], "columnvalues": [1, "select_schema_1.select_table_1"]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "select_table_1", "schema": "select_schema_2", "columnnames": ["a", "b"], "columntypes": ["integer", "text"], "columnvalues": [1, "select_schema_2.select_table_1"]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "select_table_2", "schema": "select_schema_2", "columnnames": ["a", "b"], "columntypes": ["integer", "text"], "columnvalues": [1, "select_schema_2.select_table_2"]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "select_table_3", "schema": "select_schema_2", "columnnames": ["a", "b"], "columntypes": ["integer", "text"], "columnvalues": [1, "select_schema_2.select_table_3"]}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "commit"}
 {"kind": "begin", "split": true}
 {"kind": "insert", "table": "select_table_3", "schema": "public", "columnnames": ["a", "b"], "columntypes": ["integer", "text"], "columnvalues": [1, "public.select_table_3"]}
 {"kind": "commit"}
(22 rows)

SELECT 'stop' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 stop
(1 row)

